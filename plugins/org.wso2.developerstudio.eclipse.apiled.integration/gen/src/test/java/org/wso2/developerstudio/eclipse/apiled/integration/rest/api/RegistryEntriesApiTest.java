/*
 * WSO2 API Manager - Endpoint Registry
 * This specifies a **RESTful API** for Enpoint Registry. 
 *
 * OpenAPI spec version: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.developerstudio.eclipse.apiled.integration.rest.api;

import org.wso2.developerstudio.eclipse.apiled.integration.handler.ApiException;
import org.wso2.developerstudio.eclipse.apiled.integration.rest.model.Error;
import java.io.File;
import org.wso2.developerstudio.eclipse.apiled.integration.rest.model.RegistryEntry;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistryEntriesApi
 */
@Ignore
public class RegistryEntriesApiTest {

    private final RegistryEntriesApi api = new RegistryEntriesApi();

    
    /**
     * Create a new Registry Entry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRegistryEntryTest() throws ApiException {
        String registryId = null;
        RegistryEntry registryEntry = null;
        File definitionFile = null;
        RegistryEntry response = api.createRegistryEntry(registryId, registryEntry, definitionFile);

        // TODO: test validations
    }
    
    /**
     * Delete an existing Registry Entry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRegistryEntryTest() throws ApiException {
        String registryId = null;
        String entryId = null;
        api.deleteRegistryEntry(registryId, entryId);

        // TODO: test validations
    }
    
    /**
     * Get All entries in the registry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllEntriesInRegistryTest() throws ApiException {
        String registryId = null;
        String query = null;
        String sortBy = null;
        String sortOrder = null;
        List<RegistryEntry> response = api.getAllEntriesInRegistry(registryId, query, sortBy, sortOrder);

        // TODO: test validations
    }
    
    /**
     * Retrieve a specific Entry in a Registry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRegistryEntryByUuidTest() throws ApiException {
        String registryId = null;
        String entryId = null;
        List<RegistryEntry> response = api.getRegistryEntryByUuid(registryId, entryId);

        // TODO: test validations
    }
    
    /**
     * Update an existing Registry Entry
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRegistryEntryTest() throws ApiException {
        String registryId = null;
        String entryId = null;
        RegistryEntry registryEntry = null;
        File definitionFile = null;
        RegistryEntry response = api.updateRegistryEntry(registryId, entryId, registryEntry, definitionFile);

        // TODO: test validations
    }
    
}
