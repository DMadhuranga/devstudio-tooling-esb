openapi: 3.0.0
info:
  title: WSO2 API Manager - Endpoint Registry
  description: |
    This specifies a **RESTful API** for Enpoint Registry.
  version: "0.3"
servers:
- url: https://apis.wso2.com/api/am/endpoint-registry/v1
- url: http://apis.wso2.com/api/am/endpoint-registry/v1
paths:
  /registries:
    get:
      tags:
      - Registries
      summary: |
        Retrieve Registries
      description: |
        This operation provides you an array of available Registries.
      parameters:
      - name: query
        in: query
        description: |
          **Search condition**.

          You can search for a registry by specifying the registry name as "query" attribute.

          Eg.
          "prodServer" will match a registry entry if the name is exactly "prodServer".
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - registryName
      - name: sortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: |
            OK.
            Array of Registries is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryArray'
    post:
      tags:
      - Registries
      summary: Create a new Registry
      description: |
        This operation can be used to create a new Registry specifying the details of the Registry in the payload.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
      responses:
        "201":
          description: |
            Created.
            Successful response with the newly created Registry object as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        "405":
          description: |
            Bad Request.
            Invalid request or validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "415":
          description: |
            Unsupported Media Type.
            The entity of the request was in a not supported format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:write
  /registries/{registryId}:
    get:
      tags:
      - Registries
      summary: Get details of a Registry
      description: |
        Using this operation, you can retrieve complete details of a single Registry using the RegistryId.
      operationId: getRegistryByUUID
      parameters:
      - name: registryId
        in: path
        description: ID of the Registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            OK.
            Requested Registry is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:view
    put:
      tags:
      - Registries
      summary: Update an existing Registry
      operationId: updateRegistry
      parameters:
      - name: registryId
        in: path
        description: ID of the Registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
      responses:
        "200":
          description: |
            OK.
            Updated Registry is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:write
    delete:
      tags:
      - Registries
      summary: Delete a registry
      operationId: deleteRegistry
      parameters:
      - name: registryId
        in: path
        description: uuid of the Registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            Successfully deleted.
        "400":
          description: |
            Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:write
  /registries/{registryId}/entries:
    get:
      tags:
      - Registry Entries
      summary: Get All entries in the registry
      operationId: getAllEntriesInRegistry
      parameters:
      - name: registryId
        in: path
        description: uuid of the Registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: query
        in: query
        description: |
          **Search condition**.

          You can search for a registry entry by specifying the entry name as "query" attribute.

          Eg.
          "pizzaServer" will match a registry entry if the name is exactly "pizzaServer".
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - definitionType
          - serviceType
      - name: sortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: |
            Array of entries in Registry is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryEntryArray'
        "400":
          description: |
            Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:entry_view
  /registries/{registryId}/entries/{entryId}:
    get:
      tags:
      - Registry Entries
      summary: Retrieve a specific Entry in a Registry
      operationId: getRegistryEntryByUuid
      parameters:
      - name: registryId
        in: path
        description: uuid of the registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entryId
        in: path
        description: uuid of the registry entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            Array of entries in Registry is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryEntryArray'
        "400":
          description: |
            Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:entry_view
    put:
      tags:
      - Registry Entries
      summary: Update an existing Registry Entry
      operationId: updateRegistryEntry
      parameters:
      - name: registryId
        in: path
        description: uuid of the registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entryId
        in: path
        description: uuid of the registry entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistryEntrySchema'
      responses:
        "200":
          description: |
            Updated.
            Successful response with the newly updated Registry Entry as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryEntry'
        "400":
          description: |
            Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:entry_write
    delete:
      tags:
      - Registry Entries
      summary: Delete an existing Registry Entry
      operationId: deleteRegistryEntry
      parameters:
      - name: registryId
        in: path
        description: uuid of the registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entryId
        in: path
        description: uuid of the registry entry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |
            Successfully deleted.
        "400":
          description: |
            Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            Not Found.
            Requested Registry does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:entry_write
  /registries/{registryId}/entry:
    post:
      tags:
      - Registry Entries
      summary: Create a new Registry Entry
      operationId: createRegistryEntry
      parameters:
      - name: registryId
        in: path
        description: uuid of the registry
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistryEntrySchema'
      responses:
        "201":
          description: |
            Created.
            Successful response with the newly created Registry Entry as entity in the body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryEntry'
        "405":
          description: |
            Bad Request.
            Invalid request or validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "415":
          description: |
            Unsupported Media Type.
            The entity of the request was in a not supported format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - OAuth2:
        - registry:entry_write
components:
  schemas:
    Registry:
      title: Registry object
      type: object
      properties:
        name:
          type: string
          example: Dev Registry
        id:
          type: string
          example: 01234567-0123-0123-0123-012345678901
        type:
          type: string
          example: wso2
          enum:
          - wso2
          - k8
          - etcd
        mode:
          type: string
          example: Read_Only
          enum:
          - Read_Only
          - Read_Write
    RegistryArray:
      title: Registry Array
      type: array
      items:
        $ref: '#/components/schemas/Registry'
    RegistryEntryArray:
      title: Registry Entry Array
      type: array
      items:
        $ref: '#/components/schemas/RegistryEntry'
    RegistryEntry:
      type: object
      properties:
        entryName:
          type: string
          example: Pizzashack-Endpoint
        service-url:
          type: string
          example: http://localhost/pizzashack
        serviceCategory:
          type: string
          description: Business Category of the Endpoint
          enum:
          - UTILILTY
          - EDGE
          - DOMAIN
        serviceType:
          type: string
          description: Type of the backend connecting to
          example: REST
          enum:
          - REST
          - SOAP_1_1
          - GQL
          - WS
        definitionType:
          type: string
          description: The type of the provided API definition
          example: OAS
          enum:
          - OAS
          - WSDL1
          - WSDL2
          - GQL-SDL
        definitionUrl:
          type: string
          example: http://localhost/pizzashack?swagger.json
        metadata:
          type: string
          example: '{ "mutualTLS" : true }'
      description: The Registry Entry object
    RegistryEntrySchema:
      required:
      - definitionFile
      - registryEntry
      type: object
      properties:
        registryEntry:
          $ref: '#/components/schemas/RegistryEntry'
        definitionFile:
          type: string
          format: binary
      description: The Registry Entry Schema object
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
          description: Error message.
        description:
          type: string
          description: |
            A detail description about the error message.
        moreInfo:
          type: string
          description: |
            Preferably an url with more details about the error.
        error:
          type: array
          description: |
            If there are more than one error list them out.
            For example, list out validation errors by each field.
          items:
            $ref: '#/components/schemas/ErrorListItem'
      description: Error object returned with 4XX HTTP Status
    ErrorListItem:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          description: |
            Description about individual errors occurred
        description:
          type: string
          description: |
            A detail description about the error message.
      description: Description of individual errors that may have occurred during
        a request.
    limit:
      type: integer
      description: |
        Maximum limit of items to return.
      default: 25
    offset:
      type: integer
      description: |
        Starting point within the complete list of items qualified.
      default: 0
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            registry:view: Permission to view a registry
            registry:write: Permission to Create a registry
            registry:entry_view: Permission to show an individual entry
            registry:entry_write: Permssion to write an indvidual Entry
